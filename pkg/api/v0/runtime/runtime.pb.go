// -------------------------------------------------------------------------- *\
//             Apache 2.0 License Copyright © 2022 The Aurae Authors          *
//                                                                            *
//                +--------------------------------------------+              *
//                |   █████╗ ██╗   ██╗██████╗  █████╗ ███████╗ |              *
//                |  ██╔══██╗██║   ██║██╔══██╗██╔══██╗██╔════╝ |              *
//                |  ███████║██║   ██║██████╔╝███████║█████╗   |              *
//                |  ██╔══██║██║   ██║██╔══██╗██╔══██║██╔══╝   |              *
//                |  ██║  ██║╚██████╔╝██║  ██║██║  ██║███████╗ |              *
//                |  ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝ |              *
//                +--------------------------------------------+              *
//                                                                            *
//                         Distributed Systems Runtime                        *
//                                                                            *
// -------------------------------------------------------------------------- *
//                                                                            *
//   Licensed under the Apache License, Version 2.0 (the "License");          *
//   you may not use this file except in compliance with the License.         *
//   You may obtain a copy of the License at                                  *
//                                                                            *
//       http://www.apache.org/licenses/LICENSE-2.0                           *
//                                                                            *
//   Unless required by applicable law or agreed to in writing, software      *
//   distributed under the License is distributed on an "AS IS" BASIS,        *
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
//   See the License for the specific language governing permissions and      *
//   limitations under the License.                                           *
//                                                                            *
//\* --------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v0/runtime/runtime.proto

package runtimev0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The name of the container.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// / Define a remote container image.
	// /
	// / This should be a fully qualified URI and not a container "shortname".
	// / The file type that is returned should be an uncompresed OCI compatible container "bundle"
	// / as defined in the [OCI spec](https://github.com/opencontainers/runtime-spec/blob/main/bundle.md#filesystem-bundle)
	// /
	// / ## Building a container bundle from an existing OCI image
	// /
	// / OCI "images" are effectively just tarballs. You can assemble
	// / a bundle from an existing known image.
	// /
	// / ```bash
	// / cd examples
	// / mkdir -p aurae-busybox/rootfs
	// / docker pull busybox
	// / docker create --name aurae-busybox busybox
	// / docker export aurae-busybox | tar -xfC aurae-busybox/rootfs -
	// / cd aurae-busybox
	// / runc spec
	// / ```
	// /
	// / Aurae will default pull down am image from a remote location and save to the Aurae socket directory as follows.
	// /
	// / ```
	// / $AURAE_SOCK_PATH/bundle/$NAME
	// /```
	// /
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// / Define a public portion of a container registry.
	// /
	// / Such as:
	// /  - ghcr.io
	// /  - https://registry.hub.docker.com
	// /
	// / Registry strings will be joined at runtime with the image
	// / string such that a working container bundle path can be formed.
	Registry string `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{0}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

// / OCI image represents a filesystem bundle on disk using familiar parlance.
// /
// / OCI Filesystem Bundle: https://github.com/opencontainers/runtime-spec/blob/main/bundle.md#filesystem-bundle
type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Name is the name of the pod.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{1}
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// / The request to allocate a Pod.
type PodServiceAllocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / A boring set of containers with shared network and disk.
	Pod *Pod `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *PodServiceAllocateRequest) Reset() {
	*x = PodServiceAllocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceAllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceAllocateRequest) ProtoMessage() {}

func (x *PodServiceAllocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceAllocateRequest.ProtoReflect.Descriptor instead.
func (*PodServiceAllocateRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{2}
}

func (x *PodServiceAllocateRequest) GetPod() *Pod {
	if x != nil {
		return x.Pod
	}
	return nil
}

type PodServiceAllocateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PodServiceAllocateResponse) Reset() {
	*x = PodServiceAllocateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceAllocateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceAllocateResponse) ProtoMessage() {}

func (x *PodServiceAllocateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceAllocateResponse.ProtoReflect.Descriptor instead.
func (*PodServiceAllocateResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{3}
}

type PodServiceFreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PodServiceFreeRequest) Reset() {
	*x = PodServiceFreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceFreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceFreeRequest) ProtoMessage() {}

func (x *PodServiceFreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceFreeRequest.ProtoReflect.Descriptor instead.
func (*PodServiceFreeRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{4}
}

type PodServiceFreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PodServiceFreeResponse) Reset() {
	*x = PodServiceFreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceFreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceFreeResponse) ProtoMessage() {}

func (x *PodServiceFreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceFreeResponse.ProtoReflect.Descriptor instead.
func (*PodServiceFreeResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{5}
}

type PodServiceStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PodServiceStartRequest) Reset() {
	*x = PodServiceStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceStartRequest) ProtoMessage() {}

func (x *PodServiceStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceStartRequest.ProtoReflect.Descriptor instead.
func (*PodServiceStartRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{6}
}

func (x *PodServiceStartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PodServiceStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PodServiceStartResponse) Reset() {
	*x = PodServiceStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceStartResponse) ProtoMessage() {}

func (x *PodServiceStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceStartResponse.ProtoReflect.Descriptor instead.
func (*PodServiceStartResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{7}
}

type PodServiceStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName       string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
}

func (x *PodServiceStopRequest) Reset() {
	*x = PodServiceStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceStopRequest) ProtoMessage() {}

func (x *PodServiceStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceStopRequest.ProtoReflect.Descriptor instead.
func (*PodServiceStopRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{8}
}

func (x *PodServiceStopRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodServiceStopRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

type PodServiceStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PodServiceStopResponse) Reset() {
	*x = PodServiceStopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodServiceStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodServiceStopResponse) ProtoMessage() {}

func (x *PodServiceStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodServiceStopResponse.ProtoReflect.Descriptor instead.
func (*PodServiceStopResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{9}
}

// / The most primitive workload in Aurae, a standard executable process.
type Executable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command     string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Executable) Reset() {
	*x = Executable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Executable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Executable) ProtoMessage() {}

func (x *Executable) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Executable.ProtoReflect.Descriptor instead.
func (*Executable) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{10}
}

func (x *Executable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Executable) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Executable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// / An isolation resource used to divide a system into smaller resource
// / boundaries.
type Cell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Resource parameters for control groups (cgroups)
	// / Build on the [cgroups-rs](https://github.com/kata-containers/cgroups-rs)
	// / crate. See
	// / [examples](https://github.com/kata-containers/cgroups-rs/blob/main/tests/builder.rs)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// / A comma-separated list of CPU IDs where the task in the control group
	// / can run. Dashes between numbers indicate ranges.
	CpuCpus string `protobuf:"bytes,2,opt,name=cpu_cpus,json=cpuCpus,proto3" json:"cpu_cpus,omitempty"`
	// /  Cgroups can be guaranteed a minimum number of "CPU shares"
	// /  when a system is busy.  This does not limit a cgroup's CPU
	// /  usage if the CPUs are not busy.  For further information,
	// /  see Documentation/scheduler/sched-design-CFS.rst (or
	// /  Documentation/scheduler/sched-design-CFS.txt in Linux 5.2
	// /  and earlier).
	// /
	// / Weight of how much of the total CPU time should this control
	// /  group get. Note that this is hierarchical, so this is weighted
	// /  against the siblings of this control group.
	CpuShares uint64 `protobuf:"varint,3,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// / Same syntax as the cpus field of this structure, but applies to
	// /  memory nodes instead of processors.
	CpuMems string `protobuf:"bytes,4,opt,name=cpu_mems,json=cpuMems,proto3" json:"cpu_mems,omitempty"`
	// / In one period, how much can the tasks run in microseconds.
	CpuQuota int64 `protobuf:"varint,5,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	// / Will isolate the process (and proc filesystem) from the host.
	// / Will unshare the pid, ipc, uts, and mount namespaces.
	// / The cgroup namespace is always unshared with the host.
	// /
	// / Default: false
	IsolateProcess bool `protobuf:"varint,10,opt,name=isolate_process,json=isolateProcess,proto3" json:"isolate_process,omitempty"`
	// / Will isolate the network from the host.
	// / Will unshare the net namespaces.
	// / The cgroup namespace is always unshared with the host.
	// /
	// / Default: false
	IsolateNetwork bool `protobuf:"varint,11,opt,name=isolate_network,json=isolateNetwork,proto3" json:"isolate_network,omitempty"`
}

func (x *Cell) Reset() {
	*x = Cell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell) ProtoMessage() {}

func (x *Cell) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell.ProtoReflect.Descriptor instead.
func (*Cell) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{11}
}

func (x *Cell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cell) GetCpuCpus() string {
	if x != nil {
		return x.CpuCpus
	}
	return ""
}

func (x *Cell) GetCpuShares() uint64 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *Cell) GetCpuMems() string {
	if x != nil {
		return x.CpuMems
	}
	return ""
}

func (x *Cell) GetCpuQuota() int64 {
	if x != nil {
		return x.CpuQuota
	}
	return 0
}

func (x *Cell) GetIsolateProcess() bool {
	if x != nil {
		return x.IsolateProcess
	}
	return false
}

func (x *Cell) GetIsolateNetwork() bool {
	if x != nil {
		return x.IsolateNetwork
	}
	return false
}

// / An Aurae cell is a name given to Linux control groups (cgroups) that also include
// / a name, and special pre-exec functionality that is executed from within the same context
// / as any executables scheduled.
// /
// / A cell must be allocated for every executable scheduled. A cell defines the resource
// / constraints of the system to allocate for an arbitrary use case.
type CellServiceAllocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / A smaller resource constrained section of the system.
	Cell *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
}

func (x *CellServiceAllocateRequest) Reset() {
	*x = CellServiceAllocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceAllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceAllocateRequest) ProtoMessage() {}

func (x *CellServiceAllocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceAllocateRequest.ProtoReflect.Descriptor instead.
func (*CellServiceAllocateRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{12}
}

func (x *CellServiceAllocateRequest) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// / The response after a cell has been allocated.
type CellServiceAllocateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellName string `protobuf:"bytes,1,opt,name=cell_name,json=cellName,proto3" json:"cell_name,omitempty"`
	// / A bool that will be set to true if the cgroup was created with
	// / cgroup v2 controller.
	CgroupV2 bool `protobuf:"varint,2,opt,name=cgroup_v2,json=cgroupV2,proto3" json:"cgroup_v2,omitempty"`
}

func (x *CellServiceAllocateResponse) Reset() {
	*x = CellServiceAllocateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceAllocateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceAllocateResponse) ProtoMessage() {}

func (x *CellServiceAllocateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceAllocateResponse.ProtoReflect.Descriptor instead.
func (*CellServiceAllocateResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{13}
}

func (x *CellServiceAllocateResponse) GetCellName() string {
	if x != nil {
		return x.CellName
	}
	return ""
}

func (x *CellServiceAllocateResponse) GetCgroupV2() bool {
	if x != nil {
		return x.CgroupV2
	}
	return false
}

// / Used to remove or free a cell after it has been allocated.
type CellServiceFreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellName string `protobuf:"bytes,1,opt,name=cell_name,json=cellName,proto3" json:"cell_name,omitempty"`
}

func (x *CellServiceFreeRequest) Reset() {
	*x = CellServiceFreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceFreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceFreeRequest) ProtoMessage() {}

func (x *CellServiceFreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceFreeRequest.ProtoReflect.Descriptor instead.
func (*CellServiceFreeRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{14}
}

func (x *CellServiceFreeRequest) GetCellName() string {
	if x != nil {
		return x.CellName
	}
	return ""
}

// / Response after removing or freeing a cell.
type CellServiceFreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CellServiceFreeResponse) Reset() {
	*x = CellServiceFreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceFreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceFreeResponse) ProtoMessage() {}

func (x *CellServiceFreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceFreeResponse.ProtoReflect.Descriptor instead.
func (*CellServiceFreeResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{15}
}

// / A request for starting an executable inside of a Cell.
// /
// / This is the lowest level of raw executive functionality.
// / Here you can define shell commands, and meta information about the command.
// / An executable is started synchronously.
type CellServiceStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellName   string      `protobuf:"bytes,1,opt,name=cell_name,json=cellName,proto3" json:"cell_name,omitempty"`
	Executable *Executable `protobuf:"bytes,2,opt,name=executable,proto3" json:"executable,omitempty"`
}

func (x *CellServiceStartRequest) Reset() {
	*x = CellServiceStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceStartRequest) ProtoMessage() {}

func (x *CellServiceStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceStartRequest.ProtoReflect.Descriptor instead.
func (*CellServiceStartRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{16}
}

func (x *CellServiceStartRequest) GetCellName() string {
	if x != nil {
		return x.CellName
	}
	return ""
}

func (x *CellServiceStartRequest) GetExecutable() *Executable {
	if x != nil {
		return x.Executable
	}
	return nil
}

// / The response after starting an executable within a Cell.
type CellServiceStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Return a pid as an int32 based on the pid_t type
	// / in various libc libraries.
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *CellServiceStartResponse) Reset() {
	*x = CellServiceStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceStartResponse) ProtoMessage() {}

func (x *CellServiceStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceStartResponse.ProtoReflect.Descriptor instead.
func (*CellServiceStartResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{17}
}

func (x *CellServiceStartResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// / Request to stop an executable at runtime.
type CellServiceStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellName       string `protobuf:"bytes,1,opt,name=cell_name,json=cellName,proto3" json:"cell_name,omitempty"`
	ExecutableName string `protobuf:"bytes,2,opt,name=executable_name,json=executableName,proto3" json:"executable_name,omitempty"`
}

func (x *CellServiceStopRequest) Reset() {
	*x = CellServiceStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceStopRequest) ProtoMessage() {}

func (x *CellServiceStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceStopRequest.ProtoReflect.Descriptor instead.
func (*CellServiceStopRequest) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{18}
}

func (x *CellServiceStopRequest) GetCellName() string {
	if x != nil {
		return x.CellName
	}
	return ""
}

func (x *CellServiceStopRequest) GetExecutableName() string {
	if x != nil {
		return x.ExecutableName
	}
	return ""
}

type CellServiceStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CellServiceStopResponse) Reset() {
	*x = CellServiceStopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_runtime_runtime_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellServiceStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellServiceStopResponse) ProtoMessage() {}

func (x *CellServiceStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v0_runtime_runtime_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellServiceStopResponse.ProtoReflect.Descriptor instead.
func (*CellServiceStopResponse) Descriptor() ([]byte, []int) {
	return file_v0_runtime_runtime_proto_rawDescGZIP(), []int{19}
}

var File_v0_runtime_runtime_proto protoreflect.FileDescriptor

var file_v0_runtime_runtime_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x30, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x75, 0x72, 0x61,
	0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x22, 0x51, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22,
	0x19, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x50, 0x6f,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x03, 0x70, 0x6f, 0x64,
	0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17,
	0x0a, 0x15, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x6f, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x0a, 0x16, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x19, 0x0a, 0x17, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x50, 0x6f,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xde, 0x01,
	0x0a, 0x04, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70,
	0x75, 0x5f, 0x63, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x70,
	0x75, 0x43, 0x70, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x70, 0x75, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x48,
	0x0a, 0x1a, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04,
	0x63, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x72,
	0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x22, 0x57, 0x0a, 0x1b, 0x43, 0x65, 0x6c, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x32, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x65, 0x6c, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x17, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x18, 0x43, 0x65, 0x6c,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x16, 0x43, 0x65, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x65, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x11, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x0e, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x8f, 0x03, 0x0a, 0x0a, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30,
	0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x04, 0x46, 0x72,
	0x65, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x75,
	0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x50,
	0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x98, 0x03, 0x0a, 0x0b, 0x43, 0x65, 0x6c, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x72,
	0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x75, 0x72,
	0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x28, 0x2e, 0x61, 0x75,
	0x72, 0x61, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43,
	0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x75, 0x72, 0x61, 0x65, 0x2d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61,
	0x65, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v0_runtime_runtime_proto_rawDescOnce sync.Once
	file_v0_runtime_runtime_proto_rawDescData = file_v0_runtime_runtime_proto_rawDesc
)

func file_v0_runtime_runtime_proto_rawDescGZIP() []byte {
	file_v0_runtime_runtime_proto_rawDescOnce.Do(func() {
		file_v0_runtime_runtime_proto_rawDescData = protoimpl.X.CompressGZIP(file_v0_runtime_runtime_proto_rawDescData)
	})
	return file_v0_runtime_runtime_proto_rawDescData
}

var file_v0_runtime_runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_v0_runtime_runtime_proto_goTypes = []interface{}{
	(*Container)(nil),                   // 0: aurae.runtime.v0.Container
	(*Pod)(nil),                         // 1: aurae.runtime.v0.Pod
	(*PodServiceAllocateRequest)(nil),   // 2: aurae.runtime.v0.PodServiceAllocateRequest
	(*PodServiceAllocateResponse)(nil),  // 3: aurae.runtime.v0.PodServiceAllocateResponse
	(*PodServiceFreeRequest)(nil),       // 4: aurae.runtime.v0.PodServiceFreeRequest
	(*PodServiceFreeResponse)(nil),      // 5: aurae.runtime.v0.PodServiceFreeResponse
	(*PodServiceStartRequest)(nil),      // 6: aurae.runtime.v0.PodServiceStartRequest
	(*PodServiceStartResponse)(nil),     // 7: aurae.runtime.v0.PodServiceStartResponse
	(*PodServiceStopRequest)(nil),       // 8: aurae.runtime.v0.PodServiceStopRequest
	(*PodServiceStopResponse)(nil),      // 9: aurae.runtime.v0.PodServiceStopResponse
	(*Executable)(nil),                  // 10: aurae.runtime.v0.Executable
	(*Cell)(nil),                        // 11: aurae.runtime.v0.Cell
	(*CellServiceAllocateRequest)(nil),  // 12: aurae.runtime.v0.CellServiceAllocateRequest
	(*CellServiceAllocateResponse)(nil), // 13: aurae.runtime.v0.CellServiceAllocateResponse
	(*CellServiceFreeRequest)(nil),      // 14: aurae.runtime.v0.CellServiceFreeRequest
	(*CellServiceFreeResponse)(nil),     // 15: aurae.runtime.v0.CellServiceFreeResponse
	(*CellServiceStartRequest)(nil),     // 16: aurae.runtime.v0.CellServiceStartRequest
	(*CellServiceStartResponse)(nil),    // 17: aurae.runtime.v0.CellServiceStartResponse
	(*CellServiceStopRequest)(nil),      // 18: aurae.runtime.v0.CellServiceStopRequest
	(*CellServiceStopResponse)(nil),     // 19: aurae.runtime.v0.CellServiceStopResponse
}
var file_v0_runtime_runtime_proto_depIdxs = []int32{
	1,  // 0: aurae.runtime.v0.PodServiceAllocateRequest.pod:type_name -> aurae.runtime.v0.Pod
	11, // 1: aurae.runtime.v0.CellServiceAllocateRequest.cell:type_name -> aurae.runtime.v0.Cell
	10, // 2: aurae.runtime.v0.CellServiceStartRequest.executable:type_name -> aurae.runtime.v0.Executable
	2,  // 3: aurae.runtime.v0.PodService.Allocate:input_type -> aurae.runtime.v0.PodServiceAllocateRequest
	6,  // 4: aurae.runtime.v0.PodService.Start:input_type -> aurae.runtime.v0.PodServiceStartRequest
	8,  // 5: aurae.runtime.v0.PodService.Stop:input_type -> aurae.runtime.v0.PodServiceStopRequest
	4,  // 6: aurae.runtime.v0.PodService.Free:input_type -> aurae.runtime.v0.PodServiceFreeRequest
	12, // 7: aurae.runtime.v0.CellService.Allocate:input_type -> aurae.runtime.v0.CellServiceAllocateRequest
	14, // 8: aurae.runtime.v0.CellService.Free:input_type -> aurae.runtime.v0.CellServiceFreeRequest
	16, // 9: aurae.runtime.v0.CellService.Start:input_type -> aurae.runtime.v0.CellServiceStartRequest
	18, // 10: aurae.runtime.v0.CellService.Stop:input_type -> aurae.runtime.v0.CellServiceStopRequest
	3,  // 11: aurae.runtime.v0.PodService.Allocate:output_type -> aurae.runtime.v0.PodServiceAllocateResponse
	7,  // 12: aurae.runtime.v0.PodService.Start:output_type -> aurae.runtime.v0.PodServiceStartResponse
	9,  // 13: aurae.runtime.v0.PodService.Stop:output_type -> aurae.runtime.v0.PodServiceStopResponse
	5,  // 14: aurae.runtime.v0.PodService.Free:output_type -> aurae.runtime.v0.PodServiceFreeResponse
	13, // 15: aurae.runtime.v0.CellService.Allocate:output_type -> aurae.runtime.v0.CellServiceAllocateResponse
	15, // 16: aurae.runtime.v0.CellService.Free:output_type -> aurae.runtime.v0.CellServiceFreeResponse
	17, // 17: aurae.runtime.v0.CellService.Start:output_type -> aurae.runtime.v0.CellServiceStartResponse
	19, // 18: aurae.runtime.v0.CellService.Stop:output_type -> aurae.runtime.v0.CellServiceStopResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_v0_runtime_runtime_proto_init() }
func file_v0_runtime_runtime_proto_init() {
	if File_v0_runtime_runtime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v0_runtime_runtime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceAllocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceAllocateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceFreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceFreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodServiceStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Executable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceAllocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceAllocateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceFreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceFreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_runtime_runtime_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellServiceStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v0_runtime_runtime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_v0_runtime_runtime_proto_goTypes,
		DependencyIndexes: file_v0_runtime_runtime_proto_depIdxs,
		MessageInfos:      file_v0_runtime_runtime_proto_msgTypes,
	}.Build()
	File_v0_runtime_runtime_proto = out.File
	file_v0_runtime_runtime_proto_rawDesc = nil
	file_v0_runtime_runtime_proto_goTypes = nil
	file_v0_runtime_runtime_proto_depIdxs = nil
}
